(gdb) run
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/stu4/s14/cmh3586/Courses/CS-243/Homeworks/hw3/act1/good-life

        ..Welcome to the Game of life..

Please enter the initial number of organisms: 123

Breakpoint 1, main () at good-life.c:143
143                   printf("%s", life[row][col]);
(gdb) display row
1: row = 0
(gdb) display col
2: col = 0
(gdb) whatis life
type = char [20][20]
(gdb) siplay life[row][col]
Undefined command: "siplay".  Try "help".
(gdb) display life[row][col]
3: life[row][col] = 0 '\000'
(gdb) continue
Continuing.

Breakpoint 1, main () at good-life.c:143
143                   printf("%s", life[row][col]);
1: row = 0
2: col = 1
3: life[row][col] = 0 '\000'
(gdb) next
141               for(col = 0; col<20; col++)
1: row = 0
2: col = 1
3: life[row][col] = 0 '\000'
(gdb) next

Breakpoint 1, main () at good-life.c:143
143                   printf("%s", life[row][col]);
1: row = 0
2: col = 2
3: life[row][col] = 0 '\000'
(gdb) next
141               for(col = 0; col<20; col++)
1: row = 0
2: col = 2
3: life[row][col] = 0 '\000'
(gdb) next

Breakpoint 1, main () at good-life.c:143
143                   printf("%s", life[row][col]);
1: row = 0
2: col = 3
3: life[row][col] = 0 '\000'
(gdb) info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x0000555555555820 in main at good-life.c:143
        breakpoint already hit 4 times
(gdb) continue
Continuing.

Breakpoint 1, main () at good-life.c:143
143                   printf("%s", life[row][col]);
1: row = 0
2: col = 4
3: life[row][col] = 32 ' '
(gdb) continue
Continuing.

Program received signal SIGSEGV, Segmentation fault.
__strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65
65      ../sysdeps/x86_64/multiarch/strlen-avx2.S: No such file or directory.
(gdb) list
60      in ../sysdeps/x86_64/multiarch/strlen-avx2.S
(gdb) where
#0  __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65
#1  0x00007ffff7e2de95 in __vfprintf_internal (s=0x7ffff7f9e6a0 <_IO_2_1_stdout_>, format=0x555555556063 "%s", ap=ap@entry=0x7fffffffe4f0, mode_flags=mode_flags@entry=0) at vfprintf-internal.c:1688
#2  0x00007ffff7e16ebf in __printf (format=<optimized out>) at printf.c:33
#3  0x0000555555555865 in main () at good-life.c:143
(gdb) backtrace
#0  __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65
#1  0x00007ffff7e2de95 in __vfprintf_internal (s=0x7ffff7f9e6a0 <_IO_2_1_stdout_>, format=0x555555556063 "%s", ap=ap@entry=0x7fffffffe4f0, mode_flags=mode_flags@entry=0) at vfprintf-internal.c:1688
#2  0x00007ffff7e16ebf in __printf (format=<optimized out>) at printf.c:33
#3  0x0000555555555865 in main () at good-life.c:143
(gdb) run
The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /home/stu4/s14/cmh3586/Courses/CS-243/Homeworks/hw3/act1/good-life

        ..Welcome to the Game of life..

Please enter the initial number of organisms: 123

Breakpoint 1, main () at good-life.c:143
143                   printf("%s", life[row][col]);
1: row = 0
2: col = 0
3: life[row][col] = 0 '\000'
(gdb) display life[0][5]
4: life[0][5] = 0 '\000'
(gdb) display life[0][6]
5: life[0][6] = 0 '\000'
(gdb) display life[0][7]
6: life[0][7] = 0 '\000'
(gdb) display life[0][8]
7: life[0][8] = 0 '\000'
(gdb) display life[0][9]
8: life[0][9] = 0 '\000'

Lines 143 & 155
    The printf method was expecting to string literal to come from the life[][] (it had %s), but we are using characters, so the %s needs to be a %c to not cause the seg fault
